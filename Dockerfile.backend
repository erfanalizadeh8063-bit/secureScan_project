# syntax=docker/dockerfile:1.7

############
# chef base
############
FROM rust:1-alpine AS chef
RUN apk add --no-cache musl-dev pkgconfig openssl-dev build-base curl ca-certificates
RUN cargo install cargo-chef
WORKDIR /app

FROM chef AS planner
COPY secureScan_Back/Cargo.toml secureScan_Back/Cargo.lock ./
COPY secureScan_Back/src ./src
WORKDIR /app
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
WORKDIR /app
COPY --from=planner /app/recipe.json recipe.json
COPY secureScan_Back/ ./secureScan_Back
WORKDIR /app/secureScan_Back
RUN cargo chef cook --release --recipe-path /app/recipe.json
RUN cargo build --release && strip target/release/* || true

FROM alpine:3.18 AS runtime
RUN adduser -D -H appuser && apk add --no-cache ca-certificates openssl
WORKDIR /app
COPY --from=builder /app/secureScan_Back/target/release/ /app/
EXPOSE 8080
USER appuser
HEALTHCHECK --interval=30s --timeout=3s --retries=5 CMD wget -qO- http://localhost:8080/health || exit 1
CMD ["/app/securascan-backend"]