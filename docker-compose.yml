version: "3.9"
services:
  backend:
    image: securescan-backend:glibc
    build:
      context: ./secureScan_Back
      dockerfile: Dockerfile.backend
    container_name: securescan-back
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - FRONT_ORIGIN=http://localhost:3000
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 3s
      retries: 5
    profiles: ["prod"]
    depends_on:
      frontend:
        condition: service_started

  frontend:
    build:
      context: ./secureScan_Front
      dockerfile: Dockerfile.frontend
    container_name: securescan-front
    ports:
      - "3000:10000"
    profiles: ["prod"]

  backend-dev:
    image: rust:1-alpine
    working_dir: /app
    volumes:
      - ./secureScan_Back:/app
      - cargo_target:/app/target
    command: sh -lc "apk add --no-cache musl-dev pkgconfig openssl-dev build-base cargo-watch && cargo install cargo-watch || true && cargo watch -x 'run'"
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=debug
    profiles: ["dev"]

  frontend-dev:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./secureScan_Front:/app
      - node_cache:/root/.npm
    command: sh -lc "npm ci && npm run dev -- --host"
    ports:
      - "3000:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    profiles: ["dev"]

volumes:
  cargo_target:
  node_cache:
